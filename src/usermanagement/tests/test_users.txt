usermanagement API
==================

  >>> app = getfixture('application')


Error handling
--------------

  >>> response = app.get('/users', expect_errors=True)
  >>> assert response.status_int == 404

  >>> response = app.post('/users/schema', {'a': 1}, expect_errors=True)
  >>> assert response.status_int == 405

  >>> response = app.post(
  ...     '/users/create', '''{"a": 1}''',
  ...     expect_errors=True)

  >>> assert response.status_int == 400
  >>> assert response.content_type == 'application/json'

  >>> response = app.put('/users/create', {'a': 1}, expect_errors=True)
  >>> assert response.status_int == 405


Schema
------

  >>> from usermanagement.users import SCHEMA_STRING
  >>> response = app.get('/users/schema')
  >>> assert response.body == bytes(SCHEMA_STRING, 'utf-8')


Create
------

Errors handling:

  >>> response = app.post(
  ...     '/users/create',
  ...     '''{"username": "cklinger"}''',
  ...     headers={'Content-Type': 'application/json'},
  ...     expect_errors=True)

  >>> assert response.json == {
  ...     'companyID': ['Value is missing.'],
  ...     'name': ['Value is missing.'],
  ...     'surname': ['Value is missing.'],
  ...     'password': ['Value is missing.'],
  ... }


Full submit:

  >>> response = app.post(
  ...     '/users/create',
  ...     '''{"name": "Klinger", "surname": "Christian",
  ...         "password": "test72", "companyID": "novareto"}''',
  ...     headers={'Content-Type': 'application/json'},
  ...     expect_errors=False)

  >>> assert response.status_int == 200
  >>> assert response.body == b'{"status": "ok"}'


Update
------

Errors handling:

  >>> response = app.put(
  ...     '/users/update/1',
  ...     '''{"username": "cklinger"}''',
  ...     headers={'Content-Type': 'application/json'},
  ...     expect_errors=True)

  >>> assert response.json == {
  ...     'companyID': ['Value is missing.'],
  ...     'name': ['Value is missing.'],
  ...     'surname': ['Value is missing.'],
  ...     'password': ['Value is missing.'],
  ... }


Full submit:

  >>> response = app.put(
  ...     '/users/update/1',
  ...     '''{"name": "Klinger", "surname": "Christian",
  ...         "password": "test42", "companyID": "novareto"}''',
  ...     headers={'Content-Type': 'application/json'},
  ...     expect_errors=False)

  >>> assert response.status_int == 200
  >>> response.body
  b'{"status": "ok", "updated_user": "1"}'


Fetch
-----

Errors handling:

  >>> response = app.get(
  ...     '/users/get',
  ...     expect_errors=True)

  >>> assert response.status_int == 404


Providing an id:

  >>> response = app.get(
  ...     '/users/get/1',
  ...     expect_errors=False)

  >>> assert response.json == {"fetched_user": "1", "status": "ok"}
